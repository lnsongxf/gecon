# ###################################################################
# (c) Kancelaria Prezesa Rady Ministrów 2012-2014                   #
# Treść licencji w pliku:                                           #
# http://gecon.r-forge.r-project.org/files/gEcon_licence.txt        #
#                                                                   #
# (c) Chancellery of the Prime Minister 2012-2014                   #
# Licence terms can be found in the file:                           #
# http://gecon.r-forge.r-project.org/files/gEcon_licence.txt        #
#                                                                   #
# Author(s): Grzegorz Klima, Karol Podemski,                        #
#            Kaja Retkiewicz-Wijtiwiak                              #
# ###################################################################
# Two-country model with perfect risk sharing
# ###################################################################

options
{
    output logfile = TRUE;
    output LaTeX = TRUE;
    output LaTeX landscape = TRUE;
};

indexsets
{
    COUNTRY = { 'H', 'F' };
};

tryreduce
{
    pi<'H'>[], pi<'F'>[], 
    PI<'F'>[], PI<'H'>[], 
    T<'H'>[], K_d<'H'>[], H_d<'H'>[],
    T<'F'>[], K_d<'F'>[], H_d<'F'>[],
    TR<'F'>[];
};

block <c::COUNTRY> CONSUMER
{
    definitions
    {
        u<c>[] = (C<c>[]^(mu) * (1 - H<c>[])^ (1 - mu)) ^ (1 - eta) / (1 - eta);
    };
    controls
    {
        K<c>[], C<c>[], H<c>[], I<c>[];
    };
    objective
    {
        U<c>[] = u<c>[] + beta * E[][U<c>[1]];
    };
    constraints
    {
		I<c>[] + C<c>[] + T<c>[] = pi<c>[] + r<c>[] * K<c>[-1] +
                                   W<c>[] * H<c>[] - psi<c> * K<c>[-1] * (I<c>[] / K<c>[-1] - delta<c>) ^ 2 + TR<c>[]	: lambda_c<c>[];
        K<c>[] = (1 - delta<c>) * K<c>[-1] + I<c>[];
    };
};


block <c::COUNTRY> FIRM
{
    controls
    {
        K_d<c>[], H_d<c>[], Y<c>[], pi<c>[];
    };
    objective
    {
        PI<c>[] = pi<c>[];
    };
    constraints
    {
		Y<c>[] = Z<c>[] * K_d<c>[] ^ alpha<c> * H_d<c>[]^(1 - alpha<c>);
		pi<c>[] = Y<c>[] - H_d<c>[] * W<c>[] - r<c>[] * K_d<c>[];
    };
};

block EQUILIBRIUM
{
    identities
    {
		SUM<c::COUNTRY>(TR<c>[]) = 0;
        <c::COUNTRY> K_d<c>[] = K<c>[-1];
        <c::COUNTRY> H_d<c>[] = H<c>[];
        <c::COUNTRY> T<c>[] = G_d<c>[];
        lambda_c<'H'>[] = lambda_c<'F'>[]; # Risk sharing condition
    };

};

block EXOG
{
    identities
    {
		<c::COUNTRY> G_d<c>[] = (phi_G<c> * (G_d<c>[-1]) + epsilon_G<c>[]);
        <c::COUNTRY> Z<c>[] = exp(phi_Z<c> * log(Z<c>[-1]) + epsilon_Z<c>[]);
    };
    shocks
    {
		<c::COUNTRY> epsilon_G<c>[],
		<c::COUNTRY> epsilon_Z<c>[];
    };
};
